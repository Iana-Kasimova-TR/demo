plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.google.cloud.tools.jib' version '1.8.0'
	id 'com.bmuschko.docker-remote-api' version '6.4.0'
	id 'maven-publish'
	id 'maven'
	id "org.sonarqube" version "2.8"
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/Iana-Kasimova-TR/simplyCook")
			credentials {
				username = System.getenv("GITHUB_ACTOR")
				password = System.getenv("GITHUB_TOKEN")
			}
		}
	}
	publications {
		gpr(MavenPublication) {
			artifact bootJar
		}
	}
}


import com.bmuschko.gradle.docker.tasks.container.DockerCreateContainer
import com.bmuschko.gradle.docker.tasks.container.DockerStartContainer
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

def dockerBuildDir = 'build/docker/'
def imageVersion = '1.0'
def uniqueContainerName = 'test_docker_plugin'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'


repositories {
	mavenCentral()
	maven {
		name = "GitHubPackages"
		url = uri("https://maven.pkg.github.com/Iana-Kasimova-TR/simplyCook-common")
		credentials {
			username = System.getenv("GITHUB_ACTOR")
			password = System.getenv("GITHUB_TOKEN")
		}
	}
}

ext {
	set('springCloudVersion', "Hoxton.SR4")
}

dependencies {
	implementation 'com.simply:simplyCook-common:0.0.2-SNAPSHOT'
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
    implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}


test {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property "sonar.projectKey", "Iana-Kasimova-TR_demo"
		property "sonar.organization", "iana-kasimova-tr"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

task createDockerfile(type: Dockerfile) {
	destFile = project.file("$dockerBuildDir/Dockerfile")
	from 'amazoncorretto:11'
	copyFile jar.archiveName, '/app/cook.jar'
	entryPoint 'java'
	defaultCommand '-jar', '/app/cook.jar'
	exposePort 8080
}


task syncJar(type: Copy) {
	dependsOn assemble
	from jar.archivePath
	into dockerBuildDir
}

task buildImage(type: DockerBuildImage) {
	dependsOn createDockerfile, syncJar
	inputDir = project.file(dockerBuildDir)
	images = ["simply/cook:$imageVersion"]
}

task createContainer(type: DockerCreateContainer) {
	dependsOn buildImage
	targetImageId buildImage.getImageId()
	containerName = "$uniqueContainerName"
	portSpecs = ['8080:8080']
}

task startContainer(type: DockerStartContainer) {
	dependsOn createContainer
	targetContainerId("$uniqueContainerName")
}


